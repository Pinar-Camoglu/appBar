import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(MyApp());
}
class User extends ChangeNotifier {
  String username;

  User(this.username);
}

class Product {
  String name;
  String image;

  Product(this.name, this.image);
}

class Cart extends ChangeNotifier {
  List<Product> products = [];

  Cart(this.products);

  void addProduct(Product product) {
    products.add(product);
    print('Ürün eklendi: ${product.name}');
    //notifyListeners();
  }
}


class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) => Cart([]), // Boş bir ürün listesi ile Cart oluşturuluyor
      child: ChangeNotifierProvider(
        create: (context) => User(''), // Default empty user
        child: MaterialApp(
          home: LoginPage(),
        ),
      ),
    );
  }
}


class LoginPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Login')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              onChanged: (value) {
                Provider.of<User>(context, listen: false).username = value;
              },
              decoration: InputDecoration(labelText: 'Username'),
            ),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => ProductPage()),
                );
              },
              child: Text('Login'),
            ),
          ],
        ),
      ),
    );
  }
}

class ProductPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Products'), actions: [
        Padding(
          padding: const EdgeInsets.all(8.0),
          child: Text('User: ${Provider.of<User>(context).username}'),
        ),
      ]),
      drawer: Drawer(
        child: ListView(
          children: [
            ListTile(
              title: Text('Sepete Git'),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => CartPage()),
                );
              },
            ),
          ],
        ),
      ),
      body: ProductList(),
    );
  }
}

class ProductList extends StatelessWidget {
  final List<Product> products = [
    Product('Çilek', 'image4.jpg'),
    Product('Erik', 'image5.jpg'),
    Product('Ahududu', 'image6.jpg'),
  ];

  @override
  Widget build(BuildContext context) {
    return GridView.builder(
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 2,
      ),
      itemCount: products.length,
      itemBuilder: (context, index) {
        return ProductItem(product: products[index]);
      },
    );
  }
}

class ProductItem extends StatelessWidget {
  final Product product;

  const ProductItem({required this.product});

  @override
  Widget build(BuildContext context) {
    return Card(
      child: Column(
        children: [
          Image.asset(
            'C:/Users/pinar/StudioProjects/odev7_mobilprogramlama/assets/${product.image}',
            height: 100,
            width: 100,
            fit: BoxFit.cover,
          ),
          Text(product.name),
          ElevatedButton(
            onPressed: () {
              Provider.of<Cart>(context, listen: false).addProduct(product);
              // Burada sepete ekle işlemleri yapılabilir.
              // Örneğin, bir mesaj kutusu gösterilebilir.
              showDialog(
                context: context,
                builder: (BuildContext context) {
                  return AlertDialog(
                    title: Text('Ürün Eklendi'),
                    content: Text('${product.name} sepete eklendi.'),
                    actions: [
                      TextButton(
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                        child: Text('Tamam'),
                      ),
                    ],
                  );
                },
              );
            },
            child: Text('Sepete Ekle'),
          ),
        ],
      ),
    );
  }
}

class CartPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Sepet')),
      body: Column(
        children: [
          Text('Sepetteki Ürünler:'),
          Expanded(
            child: Consumer<Cart>(
              builder: (context, cart, _) {
                return ListView.builder(
                  itemCount: cart.products.length,
                  itemBuilder: (context, index) {
                    return ListTile(
                      leading: CircleAvatar(
                        radius: 25,
                        backgroundImage: AssetImage(
                          'assets/${cart.products[index].image}',
                        ),
                      ),
                      title: Text(cart.products[index].name),
                    );
                  },
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
